TARGET:	librand.a test_randc

FC=@FC@
CXX=@CXX@
use_mpi =@use_mpi@
use_omp = @use_omp@

CXXFLAGS += @CXXFLAGS@ @OPTFLAGS@ 
FFLAGS += @FCFLAGS@
FCLIBS = @FCLIBS@

ifeq ($(use_mpi),yes) 
CXXFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL
endif # mpi

ifeq ($(use_omp),yes)
CXXFLAGS += @OPENMP_CXXFLAGS@
FFLAGS += @OPENMP_CXXFLAGS@
CXXFLAGS += -D PARTICLE_SIMULATOR_THREAD_PARALLEL
endif # omp

randc.o: rand.cxx rand.hpp 
	$(CXX) $(CXXFLAGS) -c $< -o $@

randf.o: rand.f
	$(FC) $(FFLAGS) -c $< -o $@

librand.a: randc.o randf.o
	ar rcs $@ $^

test_randf: test_rand.f librand.a
	$(FC) $(FFLAGS) $< -o $@ -L./ -lrand -lstdc++ 

test_randc: test_rand.cxx librand.a 
	$(CXX) $(CXXFLAGS) $< -o $@ -L./ -lrand $(FCLIBS)

clean:
	rm -f *.o *.so *.gch *.a
